version: 2.1

jobs:
  php-56:
    docker:
      - image: wordpress:php5.6-fpm-alpine
        environment:
          WP_TESTS_DIR: /root/project/wordpress-develop/tests/phpunit
          USE_ZEND_ALLOC: 0
      - image: mysql:5.7
        environment:
          MYSQL_DATABASE: youremptytestdbnamehere
          MYSQL_USER: yourusernamehere
          MYSQL_PASSWORD: yourpasswordhere
          MYSQL_ROOT_PASSWORD: wordpress
    steps:
      - prepare-environment
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer phpunit

  php-71:
    docker:
      - image: wordpress:php7.1-fpm-alpine
        environment:
          WP_TESTS_DIR: /root/project/wordpress-develop/tests/phpunit
      - image: mysql:5.7
        environment:
          MYSQL_DATABASE: youremptytestdbnamehere
          MYSQL_USER: yourusernamehere
          MYSQL_PASSWORD: yourpasswordhere
          MYSQL_ROOT_PASSWORD: wordpress
    steps:
      - prepare-environment
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer phpunit

  php-72:
    docker:
      - image: wordpress:php7.2-fpm-alpine
        environment:
          WP_TESTS_DIR: /root/project/wordpress-develop/tests/phpunit
      - image: mysql:5.7
        environment:
          MYSQL_DATABASE: youremptytestdbnamehere
          MYSQL_USER: yourusernamehere
          MYSQL_PASSWORD: yourpasswordhere
          MYSQL_ROOT_PASSWORD: wordpress
    steps:
      - prepare-environment
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer phpunit

  php-73:
    docker:
      - image: wordpress:php7.3-fpm-alpine
        environment:
          WP_TESTS_DIR: /root/project/wordpress-develop/tests/phpunit
      - image: mysql:5.7
        environment:
          MYSQL_DATABASE: youremptytestdbnamehere
          MYSQL_USER: yourusernamehere
          MYSQL_PASSWORD: yourpasswordhere
          MYSQL_ROOT_PASSWORD: wordpress
    steps:
      - prepare-environment
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer phpunit

  atomic-blocks-cs:
    docker:
      - image: wordpress:php7.3-fpm-alpine
        environment:
          WP_TESTS_DIR: /root/project/wordpress-develop/tests/phpunit
    steps:
      - prepare-environment:
          clone-wordpress-develop: false
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer phpcs && npm run lint:js

commands:
  prepare-environment:
    description: "Preparing the environment..."
    parameters:
      clone-wordpress-develop:
        type: boolean
        default: true
    steps:
      - run: apk add --no-cache git nodejs npm
      - run:
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            EXPECTED_SIGNATURE=$(curl -s https://composer.github.io/installer.sig)
            ACTUAL_SIGNATURE=$(php -r "echo hash_file('sha384', 'composer-setup.php');")
            [[ "$EXPECTED_SIGNATURE" == "$ACTUAL_SIGNATURE" ]] && php composer-setup.php --install-dir=/bin --filename=composer || exit 1
            composer config -g github-protocols https && composer config -g repo.packagist composer https://packagist.org
      - when:
          condition: << parameters.clone-wordpress-develop >>
          steps:
            - run: git clone git://develop.git.wordpress.org/ wordpress-develop
            - run: cp wordpress-develop/wp-tests-config-sample.php wordpress-develop/wp-tests-config.php
            - run: sed -i 's/localhost/127.0.0.1/g' wordpress-develop/wp-tests-config.php
      - run: mkdir -p wordpress-develop/src/wp-content/plugins/atomic-blocks
      - checkout:
          path: wordpress-develop/src/wp-content/plugins/atomic-blocks
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer install --prefer-dist --no-suggest --optimize-autoloader && npm install --no-package-lock

workflows:
  version: 2
  test:
    jobs:
      - atomic-blocks-cs
      - php-56
      - php-71
      - php-72
      - php-73
